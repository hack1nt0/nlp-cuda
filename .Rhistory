download.hentai.image('https://e-hentai.org/s/e955145460/1075032-1', output.dir = 'nnaive-1/')
source('~/plot_jpeg.R')
download.hentai.image('https://e-hentai.org/s/b24cf957b8/983078-1', output.dir = 'mom-6/')
download.hentai.image('https://e-hentai.org/s/0240785da1/708101-1', output.dir = 'mom-7/')
download.file('http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/11008/m_ccompxe_2017.1.040.dmg')
download.file('http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/11008/m_ccompxe_2017.1.040.dmg', destfile = 'intel-parallel-studio.dmg')
pwd
getwd()
download.file('http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/9236/m_ccompxe_2015.7.234.dmg', destfile = 'intel-parallel-studio.dmg')
https://e-hentai.org/s/f6f1292c83/332092-77
download.hentai.image('https://e-hentai.org/s/f6f1292c83/332092-77', output.dir = 'mom-sister-1/77')
source('~/plot_jpeg.R')
download.hentai.image('https://e-hentai.org/s/f6f1292c83/332092-77', output.dir = 'mom-sister-1/77')
download.hentai.image('https://e-hentai.org/s/5dfcdc9485/332092-190', output.dir = 'mom-sister-1/190')
install.packages("imager")
library(imager)
im <- load.image('mom-sister-1/190-1.jpg')
im
plot(im)
source('~/plot_jpeg.R')
download.hentai.image('https://e-hentai.org/s/83236e7f71/1089250-1', output.dir = 'sixteen-1/')
?tryCatch
?try
download.file()
?download.file
?Sys.sleep
'a' + 'b'
?cat
source('~/plot_jpeg.R')
download.hentai.image('https://e-hentai.org/s/83236e7f71/1089250-1', output.dir = 'sixteen-1/')
source('~/r4ds/crawler.R')
download.hentai.image('https://e-hentai.org/s/3078c708eb/1093345-66', output.dir = 'household-affairs-1/66')
source('~/r4ds/crawler.R')
download.hentai.image('https://e-hentai.org/s/0e61ce1e9f/1099425-1', output.dir = '~/art pack/')
library(RCUDANLP)
m <- matrix(1:1000000, 1000)
dm <- dist(m)
str(dm)
str(m)
is.matrix(dm)
mm <- as.matrix(dm)
dm[1,1]
dm[1]
dm[2]
dm[2,3]
dm[23]
str(dm)
install.packages("deldir", dependencies=TRUE)
x <- rnorm(500, 0, 1.5)
y <- rnorm(500, 0, 1)
vtess <- deldir(x, y)
library(deldir)
vtess <- deldir(x, y)
str(vtess)
?deldir
help(deldir)
library(RCudaNlp)
dtm <- test.dtm()
summary(dtm)
print(dtm)
print(dtm, 2)
dtm
str(dtm)
print(dtm, ids=c(1:3))
q
q()
2^36 / 2^10
2^36 / 2^10 / 2^10 / 2^10
library(corn)
wordLists <- tk(spam.sms[[2]])
str(wordLists)
d <- dtm(wordLists)
detach('package:corn', unload=T)
library(corn)
system.time(d <- dtm(wordLists))
class(wordLists)
mode(wordLists)
typeof(wordLists)
detach('package:corn', unload=T)
library(corn)
system.time(d <- dtm(wordLists))
list(list("hello"), list("world"))
c(list("hello"), list("world"))
class(c(list("hello"), list("world")))
class(list(list("hello"), list("world")))
class(append(list("hello"), list("world")))
append(list("hello"), list("world"))
append(list("hello"), list("world", "."))
append(list("hello"), list("world"), list("."))
append(list("hello", ","), list("world"))
detach('package:corn', unload=T)
library(corn)
test.dtm(xs = append(list(list("hello")), list(list("world"))))
xs = append(list(list("A")), list(list("B")))
xs
test.dtm(xs)
xs
class(wordLists)
wordLists[1]
length(1:10)
xs
xs <- 1:10
xs[1] - 1
xs[2] - 1
xs[3] - 1
?missing
1 & 2
1 && 2
?'&'
bitwOr(1, 2)
! 2
!2
0 & 1
1 & 1
1 & 1233332
-13 & 1233332
-13 & 0
2 ^ 43
?'['
xs
class(xs)
xs[1] <- 1.2
xs
class(xs)
xs[1] <- 1:10
names(xs)
names(xs[1])
names(xs) <- 'hi'
xs
names(xs[1])
names(xs[[1]])
attr(xs)
attributes(xs)
list(1,3)[[1:2]]
list(1,3)[[1]]
list(1,3)[[3]]
list(1,3)[[2]]
list(1,3)[[2:1]]
list(1,3)[[1:2]]
list(1,3)[[2]]
list(1,3)[[1]]
list(1,3)[[1:0]]
xs <- list(1, 2)
xs
xs[1] <- list(4,5)
xs[3] <- list(4,5)
xs <- append(xs, list(list(4,5)))
xs
xs[4]
xs[4] <- 4
xs
m
m <- matrix(1:10, 2)
m
m[matrix(c(1, 2, 2, 3), 2)]
matrix(c(1, 2, 2, 3), 2)
pmatch("med", c("mean", "median", "mode")) # returns 2
pmatch("med", c("mean", "1median", "mode"))
pmatch("med", c("mean", "med", "mode"))
charmatch(c("", "ab", "ab"), c("abc", "ab"))
2^32
library(corn)
ls()
head(wordLists)
system.time(d1 <- dtm(wordLists, parHash=1))
system.time(d1 <- dtm(wordLists, parHash=1))
system.time(d1 <- dtm(wordLists, parHash=1))
system.time(d1 <- dtm(wordLists, parHash=4))
system.time(d1 <- dtm(wordLists, parHash=4))
system.time(d1 <- dtm(wordLists, parHash=4))
system.time(d1 <- dtm(wordLists, parHash=4))
system.time(d1 <- dtm(wordLists, parHash=4))
system.time(d1 <- dtm(wordLists, parHash=4))
system.time(d1 <- dtm(wordLists, parHash=1))
system.time(d1 <- dtm(wordLists, parHash=1))
system.time(d1 <- dtm(wordLists, parHash=1))
system.time(d1 <- dtm(wordLists, parHash=1))
system.time(d1 <- dtm(wordLists, parHash=1))
system.time(d1 <- dtm(wordLists, parHash=1))
system.time(d1 <- dtm(wordLists, parHash=10))
q('yes')
library(corn)
system.time(d1 <- dtm(wordLists, parHash=10))
system.time(d1 <- dtm(wordLists, par=10))
system.time(d1 <- dtm(wordLists, par=10))
system.time(d1 <- dtm(wordLists, par=1))
system.time(d1 <- dtm(wordLists, par=1))
system.time(d1 <- dtm(wordLists, par=0))
system.time(d1 <- dtm(wordLists, par=0))
system.time(d1 <- dtm(wordLists, par=0))
system.time(d1 <- dtm(wordLists))
file.path('~', 'nlp-cuda')
file.path('~', 'nlp-cuda')
setwd
?setwd
getwd()
setwd('~')
getwd()
?setwd()
setwd('~/nlp-cuda')
getwd()
file.path('~', 'nlp-cuda')
p <- file.path('~', 'nlp-cuda')
p
p
normalizePath(p)
?normalizePath
tempdir()
R.home()
sessionInfo()
q('yes')
ls()
str(d)
summary(d[1:2,])
summary(d[[1]])
detach('package:corn', unload=T)
library(corn)
str(d)
dd <- dtm(train.wll=wll[1:30000], test.wll=wll[-(1:30000)])
str(d)
dd <- dtm(train.wll=wll[1:30000], test.wll=wll[-(1:30000)])
str(dd)
detach('package:corn', unload=T)
library(corn)
dd <- dtm(train.wll=wll[1:30000], test.wll=wll[-(1:30000)])
str(d)
dd <- dtm(train.wll=wll[1:30000], test.wll=wll[-(1:30000)])
str(d)
dd <- dtm(train.wll=wll[1:30000], test.wll=wll[-(1:30000)])
library(corn)
knn(d, d[[1]], use.all=T, k = 2, method='brute')
knn(d, d[[1]], use.all=T, k = 2, method='vptree')
vpt = knn(d, d[[1]], use.all=T, k = 10, method='vptree')
brt = knn(d, d[[1]], use.all=T, k = 10, method='brute')
which(vpt != brt)
which(vpt$p.id != brt$p.id)
vpt
brt
spam.sms$body[43081]
spam.sms$body[76]
spam.sms$body[1]
spam.sms$body[82]
q('yes')
brt = knn(d, d[[1]], use.all=T, k = 10, method='brute')
library(corn)
vpt = knn(d, d[[1]], use.all=T, k = 10, method='vptree')
vpt
brt
q('yes')
str(d)
dknn <- knn(d, d[[1]], verbose=T)
dknn <- knn(d, d[1:2,], verbose=T)
dknn <- knn(d, d[1:1000,], verbose=T)
library(corn)
ls()
str(dd)
dknn <- knn(dd$train, dd$test, k=10, verbose=T)
ls()
str(d)
kmeans
stats::kmeans
str(stats::kmeans)
?(stats::kmeans)
?stats::kmeans
fk
?stats::kmeans
matrix(rnorm(100, mean = 1, sd = 0.3), ncol = 2))
x
plot(x)
?stats::kmeans
md
md <- stats::kmeans(x, 2)
md
md <- stats::kmeans(x, 2, trace=T)
str(stats::kmeans)
md <- stats::kmeans(x, 2, iter.max = 100, trace=T)
rsparsematrix
rsparsematrix(10, 2, rand.x = rnorm)
rsparsematrix(10, 2, 0.5, rand.x = rnorm)
rsparsematrix(10, 2, 0.5, rand.x = rnorm(mean=1, sd=0.5))
rsparsematrix(10, 2, 0.5, rand.x = function(n) rnorm(n, mean=1, sd=0.5))
sm1 <- rsparsematrix(10, 2, 0.5, rand.x = function(n) rnorm(n, mean=1, sd=0.5))
sm2 <- rsparsematrix(10, 2, 0.5, rand.x = function(n) rnorm(n, mean=0, sd=0.3))
x <- rbind(sm1, sm2)
x
stats::kmeans(x, 2, trace=T)
plot(x)
methods(row)
rowMeans
x
rowSums(x)
showMethods("rowMeans")
rownames
row.names
rowsum
rowsum(x)
x
?rowsum
scale
scale
scale.default
str(matrix)
scale(x)
scale.default
tol
1e-7
q('yes')
ls()
library(corn)
xmeans(x, 2)
plot(x)
kmeans(x, 2)
xmeans(x, 2, verbose=F)
xmeans(x, 2, verbose=T)
x2 <- rbind(rnorm(10, sd=0.3), rnorm(10, mean=1, sd=0.5))
x2
x2 <- rbind(rnorm(10, sd=0.3, ncol=2), rnorm(10, mean=1, sd=0.5, ncol=2))
x2 <- rbind(matrix(rnorm(10, sd=0.3), ncol=2), matrix(rnorm(10, mean=1, sd=0.5), ncol=2))
x2
plot(x2)
x2 <- rbind(matrix(rnorm(20, sd=0.3), ncol=2), matrix(rnorm(20, mean=1, sd=0.5), ncol=2))
plot(x2)
x2 <- rbind(matrix(rnorm(20, sd=0.3), ncol=2), matrix(rnorm(20, mean=1, sd=0.5), ncol=2))
plot(x2)
kmeans(x2, 2)
xmeans(x2, 2)
xmeans(x2, 2, verbose=T)
ggplot
ggplot(x2, mapping = aes(x=data[,1], y=data[,2])) + geom_point()
ggplot(as.data.frame(x2), mapping = aes(x=data[,1], y=data[,2])) + geom_point()
as.data.frame(x2)
as.data.frame(x2)[,1]
df
?df
ggplot(as.data.frame(x2), mapping = aes(x=V1, y=V2)) + geom_point()
ggplot(as.data.frame(x2), mapping = aes(x=V1, y=V2)) + geom_point()
xm <- xmeans(x2, 2, verbose=T)
km <- kmeans(x2, 2)
km
fitted(km)
ggplot(as.data.frame(x2), mapping = aes(x=V1, y=V2, col=xm$belong)) + geom_point()
ggplot(as.data.frame(x2), mapping = aes(x=V1, y=V2, col=as.factor(xm$belong))) + geom_point()
ggplot(as.data.frame(x2), mapping = aes(x=V1, y=V2, color=as.factor(xm$belong))) + geom_point()
?kmeans
km$cluster
?km
str(km)
str(xm)
methods(km)
print.kmeans
show(km)
show(xm)
methods(class='kmeans')
methods(class='list')
methods
methods(class='dtm')
ggplot(as.data.frame(x2), mapping = aes(x=V1, y=V2, col=as.factor(km$cluster))) + geom_point()
cleanr
update.packageStatus()
update.packages
update.packages()
x11
x11()
ggplot(as.data.frame(x2), mapping = aes(x=V1, y=V2, col=as.factor(xm$belong))) + geom_point()
dev.new()
ggplot(as.data.frame(x2), mapping = aes(x=V1, y=V2, col=as.factor(xm$belong+1))) + geom_point()
dev.next
dev.next()
dev.next()
dev.prev()
dev.off()
dev.cur()
dev.prev()
factor(c(1,2,1))
factor(c(1,2,1), levels=c('2', '1'))
factor(c(1,2,1), levels=c('A', 'B'))
factor(c(1,2,1), levels=c(3, 4))
factor(c(1,2,1), levels=c(1, 1))
factor(c(1,2,1), levels=c(1, 2))
factor(c(1,2,1), levels=c(2, 1))
km
string
km
xm
diff
?diff
diff(1:10)
diff(1:10, lag=2)
lag
?lag
?lag
str(d)
xmd
xmd <- xmeans(d, 10, verbose=T)
ls()
xmd <- xmeans(d, 10, verbose=T)
library(corn)
xmd <- xmeans(d, 10, verbose=T)
ls()
library(corn)
xmd <- xmeans(d, 10, verbose=T)
str(d)
xmd <- xmeans(d, 10, verbose=T)
str(d)
xmd <- xmeans(d, 10, verbose=T)
str(d)
xmd <- xmeans(d, 10, verbose=T)
ls()
str(d)
xmd <- xmeans(rsparsematrix(10000, 100, 0.03), 10, verbose=T)
q('yes'
)
str(d)
xmd <- xmeans(d, 10, verbose=T)
copy
ls()
library(corn)
wll <- tk(spam.sms$body, symbol=F)
d3 <- dtm(train.wll=wll)
save.image()
d3 <- scale(d3)
dlopen
?library.dynam
?dyn.load
library(corn)
xm <- xmm(d2, k=10)
str(xm)
xm <- xmm(d2, k=10, max.itr=100)
str(xm)
plot(xm$log.Prob)
plot(xm$log.Prob, type='o')
q('yes')
library(corn)
ls()
str(xm)
summary(mean)
summary(xm$mean)
summary(matrix(1:10, nrow=2))
summary(mean[1])
summary(xm$mean[1])
summary
summary(t(xm$mean))
summary(xm$prior)
xm <- xmm(d3, k = 10, max.itr=100, verbose=T)
str(xm)
summary(xm$prior)
table(xm$prior)
apply(xm$resp, 1, function(x) which(x>0))
apply(xm$resp, 1, function(x) which(x==1))
which(xm$resp[1])
which(xm$resp[1] == 1)
which(xm$resp[1] > 0)
str(xm)
which(xm$resp[,1] == 1)
which(xm$resp[,2] == 1)
which(xm$resp[,223] == 1)
apply(xm$resp, 2, function(x) which(x==1))
table(apply(xm$resp, 2, function(x) which(x==1)))
str(xm)
table(xm$mean[10])
table(xm$mean[10,])
str(xm)
summary(xm$mean[10,])
table(xm$mean[1,])
table(xm$var[1,])
table(xm$var[10,])
table(xm$var[3,])
head(table(xm$var[3,]))
plot(xm$log.Prob, type='o')
ls()
str(xmd3)
str(xmd)
plot(xmd)
xm2 <- xmm(d3, k = 50, pre=xmd[[9]], verbose=T)
xmm
xmm.dgCMatrix
xmd[[9]]
class(xmd[[9]])
xmd[[9]]$prior
xmd[[9]]$mean
str(xmd[[9]])
str(xm$mean)
q('yes')
library(corn)
detach(package:corn, unload=T)
library(corn)
ls()
xm <- xmm(d3, k=10, max.itr=2, verbose=T)
xm <- xmm(d3, k=10, max.itr=3, verbose=T)
detach(package:corn, unload=T)
library(corn)
xm <- xmm(d3, k=10, max.itr=3, verbose=T)
xm <- xmm(d3, k=10, max.itr=2, verbose=T)
xm <- xmm(d3, k=10, max.itr=3, verbose=T)
d
d <- rsparsematrix(10, 10, 0.6)
d
xm <- xmm(d, k=10, max.itr=3, verbose=T)
xm <- xmm(d, k=3, max.itr=3, verbose=T)
library(corn)
d
xm <- xmm(d, k=3)
xm <- xmm(d, k=3)
library(corn)
xm <- xmm(d3, k=50, max.itr=100, tol=0.1, verbose=T)
xm <- xmm(d3, k=50, max.itr=100, tol=0.1, verbose=T)
xm <- xmm(d3, k=50, max.itr=100, verbose=T)
xmm
xmm(d, 10)
xmm(d, k = 10)
xmm(d, k = 3)
q('yes')
